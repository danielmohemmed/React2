name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: npm install
    
    - name: install --save-dev jest
      run: npm install --save-dev jest @testing-library/react @testing-library/jest-dom

    - name: Run the tests and generate coverage report
      run: npm test -- --coverage

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4

    - name: Build
      run: npm run build

    - name: Deploy
      run: |
        git config --global user.name $user_name
        git config --global user.email $user_email
        git remote set-url origin https://${github_token}@github.com/${repository}
        npm run deploy
        
      env:
        user_name: 'github-actions[bot]'
        user_email: 'github-actions[bot]@users.noreply.github.com'
        github_token: ${{ secrets.GH_TOKEN }}
        repository: ${{ github.repository }}

        uses: peaceiris/actions-gh-pages@v4
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v4
      with:
          github_token: ${{ secrets.GH_TOKEN }}
          publish_dir: ./dist  # Replace with your build output directory
          publish_branch: gh-pages

    - name: Zip the build directory
      run: zip -r web-app.zip dist

    - name: Install jq
      run: sudo apt-get install jq

    - name: Verify zip file creation
      run: |
          echo "Contents of current directory:"
          ls -l
          echo "Contents of zip file:"
          unzip -l web-app.zip

  Deploy_To_AppCenter:
    needs: [build]
    runs-on: ubuntu-latest
    name: Android Build
    steps:
    - uses: actions/checkout@v2
    - name: set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Gradle
      run: ./gradlew assembleDevRelease -PkeystorePassword=${{secrets.KEYSTORE_PASSWORD}} -PkeyAliasPassword=${{secrets.KEY_ALIAS_PASSWORD}}
    - name: upload artefact to App Center
      uses: wzieba/AppCenter-Github-Action@v1.0.0
      with:
        appName: ${{secrets.APP_CENTER_API_TOKEN}}/${{secrets.APP_CENTER_API_TOKEN}}
        token: ${{secrets.APP_CENTER_API_TOKEN}}
        group: Internal
        file: app/build/outputs/apk/dev/release/app-dev-release.apk
